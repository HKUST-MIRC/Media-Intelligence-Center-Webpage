---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  {
    testimonials && testimonials.length > 0 && (
      <>
        {/* Directors Section */}
        <div class="grid sm:grid-cols-1 lg:grid-cols-2 gap-6 mb-8 justify-center">
          {testimonials.slice(0, 2).map(({ title, testimonial, name, job, image, url }) => (
            <div class="flex h-auto intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter justify-center">
              <div class="flex flex-col items-center p-4 md:p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600 text-center max-w-sm">
                {image && (
                  <div class="mb-4">
                    {typeof image === 'string' ? (
                      <Fragment set:html={image} />
                    ) : (
                      <Image
                        class="h-24 w-24 rounded-full border-2 border-slate-200 dark:border-slate-600 object-cover"
                        width={96}
                        height={96}
                        widths={[192, 384]}
                        layout="fixed"
                        {...image}
                      />
                    )}
                  </div>
                )}

                {name && url && (
                  <a
                    href={url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-lg font-semibold mb-1 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 hover:underline transition-colors duration-200"
                  >
                    {name}
                  </a>
                )}
                {name && !url && <h3 class="text-lg font-semibold mb-1">{name}</h3>}
                {job && <p class="text-sm text-muted mb-4">{job}</p>}

                {title && <h2 class="text-lg font-medium leading-6 pb-4">{title}</h2>}
                {testimonial && (
                  <blockquote class="flex-auto">
                    <p class="text-muted">" {testimonial} "</p>
                  </blockquote>
                )}
              </div>
            </div>
          ))}
        </div>

        {/* <!-- Other Faculty Section --> */}
        {testimonials.length > 2 && (
          <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {testimonials.slice(2).map(({ title, testimonial, name, job, image, url }) => (
              <div class="flex h-auto intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
                <div class="flex flex-col items-center p-4 md:p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600 text-center">
                  {image && (
                    <div class="mb-4">
                      {typeof image === 'string' ? (
                        <Fragment set:html={image} />
                      ) : (
                        <Image
                          class="h-24 w-24 rounded-full border-2 border-slate-200 dark:border-slate-600 object-cover"
                          width={96}
                          height={96}
                          widths={[192, 384]}
                          layout="fixed"
                          {...image}
                        />
                      )}
                    </div>
                  )}

                  {name && url && (
                    <a
                      href={url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-lg font-semibold mb-1 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 hover:underline transition-colors duration-200"
                    >
                      {name}
                    </a>
                  )}
                  {name && !url && <h3 class="text-lg font-semibold mb-1">{name}</h3>}
                  {job && <p class="text-sm text-muted mb-4">{job}</p>}

                  {title && <h2 class="text-lg font-medium leading-6 pb-4">{title}</h2>}
                  {testimonial && (
                    <blockquote class="flex-auto">
                      <p class="text-muted">" {testimonial} "</p>
                    </blockquote>
                  )}
                </div>
              </div>
            ))}
          </div>
        )}
      </>
    )
  }
  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
